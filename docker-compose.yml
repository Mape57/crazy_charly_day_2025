version: '3.3'

services:
  frontend:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8084:5173"
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev -- --host"
    env_file:
      - .env
    networks:
      - frontend_backend_network

  app:
    build:
      context: ./serveur
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - frontend_backend_network
      - db_rabbitmq_network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: charlyday
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./db/init-scripts:/docker-entrypoint-initdb.d/
      - ./db/postgresql.conf:/etc/postgresql.conf
    env_file:
      - .env
    networks:
      - db_rabbitmq_network

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    networks:
      - db_rabbitmq_network

volumes:
  postgres_data:

networks:
  frontend_backend_network:
    driver: bridge
  db_rabbitmq_network:
    driver: bridge